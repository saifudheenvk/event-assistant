AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless AI-Powered Event Assistant MVP - Event Registration
  
Globals:
  Function:
    Timeout: 3
  Api:
      OpenApiVersion: '3.0.0'
    

Parameters:
  LogLevel:
    Type: String
    Default: INFO
  UserPoolId:
    Type: String
    Default: us-east-1_m9KnTEHHl
  UserPoolClientId:
    Type: String
    Default: "2evg82jv37qsjqsqe11ie187ij"
  GitHubOwner:
    Type: String
    Default: "saifudheenvk"
  GitHubRepo:
    Type: String
    Default: "event-assistant"
  GitHubBranch:
    Type: String
    Default: "master"
  GitHubToken:
    Type: String
    Default: "ghp_1234567890"
  ArtifactBucket:
    Type: String
    Default: "my-pipeline-artifacts-bucket-saifu"

Resources:
  ServerlessRestApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: event-assistant-api
      Description: "This is a test api"
      StageName: dev
      DefinitionUri: swagger.yaml
      Tags:
        Name: event-assistant-api
        Environment: dev

  CommonLibsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: CommonLibsLayer
      Description: This is the common nodejs libraries used across lambdas
      ContentUri: layers/commonlibs
      CompatibleRuntimes:
        - nodejs20.x
      LicenseInfo: 'Available under the MIT-0 license.'
      RetentionPolicy: Delete
      
  CommonsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: CommonsLayer
      Description: This is the collection of commonly used functions
      ContentUri: layers/commons/
      CompatibleRuntimes:
        - nodejs20.x
      LicenseInfo: 'Available under the MIT-0 license.'
      RetentionPolicy: Delete

  EventsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: events
      AttributeDefinitions:
        - AttributeName: eventId
          AttributeType: S
      KeySchema:
        - AttributeName: eventId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  SpeakersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: speakers
      AttributeDefinitions:
        - AttributeName: speakerId
          AttributeType: S
      KeySchema:
        - AttributeName: speakerId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  SessionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: sessions
      AttributeDefinitions:
        - AttributeName: sessionId
          AttributeType: S
        - AttributeName: eventId
          AttributeType: S
        - AttributeName: speakerId
          AttributeType: S
      KeySchema:
        - AttributeName: sessionId
          KeyType: HASH
        - AttributeName: eventId
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: eventId-index
          KeySchema:
            - AttributeName: eventId
              KeyType: HASH
            - AttributeName: speakerId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  AttendeesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: attendees
      AttributeDefinitions:
        - AttributeName: attendeeId
          AttributeType: S
        - AttributeName: eventId
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: attendeeId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: email-index
          KeySchema:
            - AttributeName: email
              KeyType: HASH
            - AttributeName: eventId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: eventId-index
          KeySchema:
            - AttributeName: eventId
              KeyType: HASH
            - AttributeName: attendeeId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  SessionRegistrationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: session_registrations
      AttributeDefinitions:
        - AttributeName: sessionId
          AttributeType: S
        - AttributeName: eventId
          AttributeType: S
        - AttributeName: attendeeId
          AttributeType: S
      KeySchema:
        - AttributeName: sessionId
          KeyType: HASH
        - AttributeName: attendeeId
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: attendeeId-index
          KeySchema:
            - AttributeName: attendeeId
              KeyType: HASH
            - AttributeName: sessionId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: eventId-index
          KeySchema:
            - AttributeName: eventId
              KeyType: HASH
            - AttributeName: sessionId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  AuthenticateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: authenticate-user
      CodeUri: auth/
      Handler: index.handler
      Runtime: nodejs20.x
      Environment:
        Variables:
          ATTENDEES_TABLE: !Ref AttendeesTable
          logLevel: !Ref LogLevel
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AttendeesTable
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - cognito-idp:InitiateAuth
            Resource: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId} 
      Layers:
        - !Ref CommonLibsLayer
        - !Ref CommonsLayer
      Events:
        AuthenticateUser:
          Type: Api
          Properties:
            Path: /login
            Method: post
            RestApiId: !Ref ServerlessRestApi

  RegisterAttendeeFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: register-attendee
      CodeUri: register/
      Handler: index.handler
      Runtime: nodejs20.x
      Environment:
        Variables:
          ATTENDEES_TABLE: !Ref AttendeesTable
          logLevel: !Ref LogLevel
          USER_POOL_ID: !Ref UserPoolId
          USER_POOL_CLIENT_ID: !Ref UserPoolClientId
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AttendeesTable
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - cognito-idp:SignUp
              - cognito-idp:InitiateAuth
            Resource: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId} 
        - AmazonSESFullAccess
      Layers:
        - !Ref CommonLibsLayer
        - !Ref CommonsLayer
      Events:
        RegisterAttendee:
          Type: Api
          Properties:
            Path: /register
            Method: post
            RestApiId: !Ref ServerlessRestApi

  BookSessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: book-session
      CodeUri: sessions/
      Handler: index.bookSession
      Runtime: nodejs20.x
      Environment:
        Variables:
          SESSION_REGISTRATIONS_TABLE: !Ref SessionRegistrationsTable
          SESSIONS_TABLE: !Ref SessionsTable
          logLevel: !Ref LogLevel
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionRegistrationsTable
      Layers:
        - !Ref CommonLibsLayer
        - !Ref CommonsLayer
      Events:
        BookSession:
          Type: Api
          Properties:
            Path: /sessions/{sessionId}/book
            Method: post
            RestApiId: !Ref ServerlessRestApi
        
  CancelSessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: cancel-session
      CodeUri: sessions/
      Handler: index.cancelSession
      Runtime: nodejs20.x
      Environment:
        Variables:
          SESSION_REGISTRATIONS_TABLE: !Ref SessionRegistrationsTable
          SESSIONS_TABLE: !Ref SessionsTable
          logLevel: !Ref LogLevel
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionRegistrationsTable
      Layers:
        - !Ref CommonLibsLayer
        - !Ref CommonsLayer
      Events:
        CancelSession:
          Type: Api
          Properties:
            Path: /sessions/{sessionId}/cancel
            Method: delete
            RestApiId: !Ref ServerlessRestApi

  GetSessionDetailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-session-details
      CodeUri: sessions/
      Handler: index.getSessionDetails
      Runtime: nodejs20.x
      Environment:
        Variables:
          SESSIONS_TABLE: !Ref SessionsTable
          SPEAKERS_TABLE: !Ref SpeakersTable
          SESSION_REGISTRATIONS_TABLE: !Ref SessionRegistrationsTable
          logLevel: !Ref LogLevel
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SpeakersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionRegistrationsTable
      Layers:
        - !Ref CommonLibsLayer
        - !Ref CommonsLayer
      Events:
        GetSessionDetails:
          Type: Api
          Properties:
            Path: /sessions/{sessionId}
            Method: get
            RestApiId: !Ref ServerlessRestApi

  GetEventDetailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-event-details
      CodeUri: event-details/
      Handler: index.getEventDetails
      Runtime: nodejs20.x
      Environment:
        Variables:
          EVENTS_TABLE: !Ref EventsTable
          SESSIONS_TABLE: !Ref SessionsTable
          SPEAKERS_TABLE: !Ref SpeakersTable
          logLevel: !Ref LogLevel
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SpeakersTable
      Layers:
        - !Ref CommonLibsLayer
        - !Ref CommonsLayer
      Events:
        GetEventDetails:
          Type: Api
          Properties:
            Path: /events/{eventId}
            Method: get
            RestApiId: !Ref ServerlessRestApi

  GetCurrentAttendeeFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-current-attendee
      CodeUri: event-details/
      Handler: index.getCurrentAttendee
      Runtime: nodejs20.x
      Environment:
        Variables:
          ATTENDEES_TABLE: !Ref AttendeesTable
          logLevel: !Ref LogLevel
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AttendeesTable
      Layers:
        - !Ref CommonLibsLayer
        - !Ref CommonsLayer
      Events:
        GetCurrentAttendee:
          Type: Api
          Properties:
            Path: /attendees/current
            Method: get
            RestApiId: !Ref ServerlessRestApi


#Deployment Pipeline
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: event-assistant-pipeline
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceOutput
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketLocation
                  - s3:ListBucket
                Resource:
                  - 'arn:aws:s3:::my-pipeline-artifacts-bucket-saifu/*'
                  - 'arn:aws:s3:::my-pipeline-artifacts-bucket-saifu'
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - iam:PassRole
                Resource:
                  - !GetAtt CodeBuildProject.Arn
                  - !Sub 'arn:aws:cloudformation:${AWS::Region}:597088052511:stack/event-assistant-stack/*'
                  - !GetAtt CodeBuildServiceRole.Arn

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: event-assistant-codebuild
      Description: "This is the codebuild for the event assistant"
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:6.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yaml

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - 'arn:aws:s3:::my-pipeline-artifacts-bucket-saifu/*'
                  - 'arn:aws:s3:::my-pipeline-artifacts-bucket-saifu'
                  - 'arn:aws:s3:::saifu-codesam/*'
                  - 'arn:aws:s3:::saifu-codesam'
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:DescribeTable
                Resource:
                  - !GetAtt EventsTable.Arn
                  - !GetAtt SessionsTable.Arn
                  - !GetAtt SpeakersTable.Arn
                  - !GetAtt SessionRegistrationsTable.Arn
                  - !GetAtt AttendeesTable.Arn
              - Effect: Allow
                Action:
                  - lambda:UpdateFunctionCode
                  - lambda:InvokeFunction
                  - lambda:CreateFunction
                  - lambda:PublishLayerVersion
                  - lambda:GetLayerVersion
                  - lambda:ListLayerVersions
                  - lambda:DeleteLayerVersion
                Resource:
                  - !GetAtt AuthenticateUserFunction.Arn
                  - !GetAtt RegisterAttendeeFunction.Arn
                  - !GetAtt BookSessionFunction.Arn
                  - !GetAtt CancelSessionFunction.Arn
                  - !GetAtt GetEventDetailsFunction.Arn
                  - !GetAtt GetSessionDetailsFunction.Arn
                  - !GetAtt GetCurrentAttendeeFunction.Arn
                  - !GetAtt CommonLibsLayer.Arn
                  - !GetAtt CommonsLayer.Arn
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - kms:Decrypt
                Resource:
                  - 'arn:aws:secretsmanager:us-east-1:597088052511:secret:EventAssistant-y4FTxG'
                  - 'arn:aws:kms:us-east-1:597088052511:key/*'
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:CreateLogGroup
                Resource:
                  - 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - codebuild:*
                  - iam:*
                  - apigateway:*
                  - cloudformation:*
                  - cloudwatch:*
                  - events:*
                  - codepipeline:*
                Resource: "*"

Outputs:
  AttendeesTableArn:
    Description: "Attendees Table ARN"
    Value: !GetAtt AttendeesTable.Arn
  EventsTableArn:
    Description: "Events Table ARN"
    Value: !GetAtt EventsTable.Arn
  SessionsTableArn:
    Description: "Sessions Table ARN"
    Value: !GetAtt SessionsTable.Arn
  SpeakersTableArn:
    Description: "Speakers Table ARN"
    Value: !GetAtt SpeakersTable.Arn
  SessionRegistrationsTableArn:
    Description: "Session Registrations Table ARN"
    Value: !GetAtt SessionRegistrationsTable.Arn
  CodePipelineRoleArn:
    Description: "Code Pipeline Role ARN"
    Value: !GetAtt CodePipelineRole.Arn
  CodeBuildProjectArn:
    Description: "Code Build Project ARN"
    Value: !GetAtt CodeBuildProject.Arn
  CodeBuildServiceRoleArn:
    Description: "Code Build Service Role ARN"
    Value: !GetAtt CodeBuildServiceRole.Arn
  PipelineUrl:
    Description: "Pipeline URL"
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/codesuite/codepipeline/pipelines/${CodePipeline}/view?region=${AWS::Region}"




